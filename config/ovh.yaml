projectName: ovh

binderhub:
  config:
    BinderHub:
      pod_quota: 80
      hub_url: https://hub-binder.mybinder.ovh
      badge_base_url: https://mybinder.org
      sticky_builds: true
      use_registry: true
      image_prefix: 3i2li627.gra7.container-registry.ovh.net/binder/ovhbhub-r2d-g5b5b759
    DockerRegistry:
      # Docker Registry uses harbor
      # ref: https://github.com/goharbor/harbor/wiki/Harbor-FAQs#api
      token_url: "https://3i2li627.gra7.container-registry.ovh.net/service/token?service=harbor-registry"

  replicas: 1

  extraVolumes:
    - name: secrets
      secret:
        secretName: events-archiver-secrets
  extraVolumeMounts:
    - name: secrets
      mountPath: /secrets
      readOnly: true
  extraEnv:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secrets/service-account.json

  ingress:
    hosts:
      - binder.mybinder.ovh
      - ovh.mybinder.org

  jupyterhub:
    hub:
      image:
        pullPolicy: IfNotPresent

    proxy:
      chp:
        image:
          pullPolicy: IfNotPresent
      https:
        type: offload

    ingress:
      hosts:
        - hub-binder.mybinder.ovh
      tls:
        - secretName: kubelego-tls-jupyterhub
          hosts:
            - hub-binder.mybinder.ovh

    scheduling:
      userScheduler:
        enabled: false
      podPriority:
        enabled: true
      userPlaceholder:
        enabled: true
        replicas: 5

    singleuser:
      image:
        pullPolicy: IfNotPresent
      networkTools:
        image:
          pullPolicy: IfNotPresent

  imageCleaner:
    # Use 40GB as upper limit, size is given in bytes
    imageGCThresholdHigh: 40e9
    imageGCThresholdLow: 30e9
    imageGCThresholdType: "absolute"

cryptnono:
  enabled: false

grafana:
  ingress:
    hosts:
      - grafana-mybinder.mybinder.ovh
    tls:
      - hosts:
          - grafana-mybinder.mybinder.ovh
        secretName: kubelego-tls-grafana
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus-mybinder.mybinder.ovh
          access: direct
          isDefault: true
          editable: false
  persistence:
    storageClassName: csi-cinder-high-speed

prometheus:
  server:
    persistentVolume:
      size: 50Gi
    retention: 30d
    ingress:
      hosts:
        - prometheus-mybinder.mybinder.ovh
      tls:
        - hosts:
            - prometheus-mybinder.mybinder.ovh
          secretName: kubelego-tls-prometheus

ingress-nginx:
  controller:
    hostNetwork: true
    replicaCount: 1
    # OVH host-networking requires ingress controller on node-1
    nodeSelector:
      kubernetes.io/hostname: node-1
  scope:
    enabled: false

static:
  ingress:
    hosts:
      - static-mybinder.mybinder.ovh
    tls:
      secretName: kubelego-tls-static

redirector:
  enabled: false

matomo:
  enabled: false

analyticsPublisher:
  enabled: false

gcsProxy:
  enabled: false
